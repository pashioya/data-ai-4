LOAD CSV FROM "file:///Journeys.csv" AS journey
WITH journey
CREATE (:Journey {
    RideId: journey[0],
    StartTime: datetime({epochMillis: apoc.date.parse(toString(journey[1]), 'ms', 'yyyy-MM-dd HH:mm:ss.SSS')}),
    EndTime: datetime({epochMillis: apoc.date.parse(toString(journey[2]), 'ms', 'yyyy-MM-dd HH:mm:ss.SSS')}),
    VehicleId: journey[3],
    SubscriptionId: journey[4],
    SubscriptionType: journey[5],
    StartStationNR: journey[6],
    StartStationLockNr: journey[7],
    EndStationNR: journey[8],
    EndStationLockNr: journey[9]
})


LOAD CSV FROM "file:///Stations.csv" AS station
WITH station
CREATE (:Station {
    StationId: station[0],
    StationNr: station[1],
    Type: station[2],
    Street: station[3],
    StreetNumber: station[4],
    ZipCode: station[5],
    NeighborhoodId: station[6]
})

LOAD CSV FROM "file:///Neighborhoods.csv" AS neighborhood
WITH neighborhood
CREATE (:Neighborhood {
    NeighborhoodId: neighborhood[0],
    Name: neighborhood[1]
})


MATCH (n:Neighborhood), (s:Station)
WHERE n.NeighborhoodId = s.NeighborhoodId
CREATE (n)-[:HAS_STATION]->(s)


MATCH (s:Station), (j:Journey)
WHERE s.StationNr = j.StartStationNR
CREATE (j)-[:STARTS_FROM]->(s)

MATCH (s:Station), (j:Journey)
WHERE s.StationNr = j.EndStationNR
CREATE (j)-[:ENDS_AT]->(s)


QUERIES:
Getting a Specific station and hour of the day and the journeys that interacted with that station at that hour

MATCH (s:Station)-[r]-(j:Journey)
Where j.StartTime.hour = 12
And s.StationNr = '089'
RETURN s, r, j



For a given station and hour, the journeys that started at that station and ended at another station.
Gives the start neighbourhood and end neighbourhood as well as journey count

ENTER START STATION AND HOUR BEFORE RUNNING QUERY



MATCH(start:Station {StationNr: 'ENTER START STATION HERE'})-[:STARTS_FROM]-(journey:Journey)
WHERE journey.StartTime.hour = ENTER HOUR HERE
With start, journey
Match  (n:Neighborhood)-[:HAS_STATION]->(start)
Match (end:Station {StationNr: journey.EndStationNR})
Match (nt:Neighborhood)-[:HAS_STATION]->(end)
RETURN  n.Name as StartNeighborhood, nt.Name as EndNeighborhood, Count(journey) as JourneyCount


Example query:
TEST PURPOSES:
START STATION = 089
HOUR = 12
(THESE ENTRYS GIVE RESULTS)

MATCH(start:Station {StationNr: '089'})-[:STARTS_FROM]-(journey:Journey)
WHERE journey.StartTime.hour = 12
With start, journey
Match  (n:Neighborhood)-[:HAS_STATION]->(start)
Match (end:Station {StationNr: journey.EndStationNR})
Match (nt:Neighborhood)-[:HAS_STATION]->(end)
RETURN  n.Name as StartNeighborhood, nt.Name as EndNeighborhood, Count(journey) as JourneyCount